(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{386:function(e,s,a){e.exports=a.p+"assets/img/1_start-a-new-comparison.a927eccb.png"},387:function(e,s,a){e.exports=a.p+"assets/img/2_select-view-options.927eaa9c.png"},388:function(e,s,a){e.exports=a.p+"assets/img/3_select-and-copy.c0a8a686.png"},389:function(e,s,a){e.exports=a.p+"assets/img/6_edit-conftest-sh.30fdc81a.png"},390:function(e,s,a){e.exports=a.p+"assets/img/7_edit-manifest.cf311401.png"},405:function(e,s,a){"use strict";a.r(s);var t=a(54),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"frontmatter-title"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),t("p",[e._v("For your system, you may use either use the vGPU-KVM driver or a merged driver, which would supply both DRM (graphics output) and vGPU functions to your host system. Follow directions in either of the sections below, depending on your choice.")]),e._v(" "),t("p",[e._v("Alternatively, if you have a pre-patched driver package, you may skip this page and instead install that package by running the following as root, selecting the correct filename as necessary:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'NVIDIA-Linux-x86_64-510.47.03-vgpu-kvm-patched.run'")]),e._v(" --dkms\n")])])]),t("p",[e._v("All directions below assume you have downloaded "),t("code",[e._v("NVIDIA-GRID-Linux-KVM-510.47.03-511.65.zip")]),e._v(" from NVIDIA's customer portal and have extracted the file into your current working directory. You will additionally need to download "),t("a",{attrs:{href:e.$withBase("/patches/510.47.03/nvidia-vgpu-vfio.patch")}},[e._v("nvidia-vgpu-vfio.patch")]),e._v(" and "),t("a",{attrs:{href:e.$withBase("/patches/510.47.03/nv-kernel.patch")}},[e._v("nv-kernel.patch")]),e._v(" into the same folder.")]),e._v(" "),t("h2",{attrs:{id:"vgpu-kvm-driver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vgpu-kvm-driver"}},[e._v("#")]),e._v(" vGPU-KVM Driver")]),e._v(" "),t("p",[e._v("This is the most simple setup, as the only modifications necessary are a small handful of patches and additional source files to support consumer GPUs and "),t("RouterLink",{attrs:{to:"/tools/vgpu-unlock-rs.html"}},[e._v("vgpu_unlock-rs")]),e._v(".")],1),e._v(" "),t("h3",{attrs:{id:"unpack-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unpack-files"}},[e._v("#")]),e._v(" Unpack files")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'NVIDIA-Linux-x86_64-510.47.03-vgpu-kvm.run'")]),e._v(" -x --target vgpu-kvm\n")])])]),t("h3",{attrs:{id:"apply-patches"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apply-patches"}},[e._v("#")]),e._v(" Apply patches")]),e._v(" "),t("p",[e._v("These will allow compilation against Linux 5.15+ and prevent the driver from locking itself out upon detection of a consumer GPU.")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("patch vgpu-kvm/kernel/nvidia-vgpu-vfio/nvidia-vgpu-vfio.c nvidia-vgpu-vfio.patch\npatch vgpu-kvm/kernel/nvidia/nv-kernel.o_binary nv-kernel.patch\n")])])]),t("h3",{attrs:{id:"add-unlock-hooks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-unlock-hooks"}},[e._v("#")]),e._v(" Add unlock hooks")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'https://github.com/DualCoder/vgpu_unlock.git'")]),e._v(" vgpu_unlock\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" -l vgpu_unlock/kern.ld vgpu-kvm/kernel/nvidia/kern.ld\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" -l vgpu_unlock/vgpu_unlock_hooks.c vgpu-kvm/kernel/nvidia/vgpu_unlock_hooks.c\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'$ a ldflags-y += -T $(src)/nvidia/kern.ld'")]),e._v(" vgpu-kvm/kernel/nvidia/nvidia.Kbuild\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'32 a #include \"vgpu_unlock_hooks.c\"'")]),e._v(" vgpu-kvm/kernel/nvidia/os-interface.c\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'kernel/common/inc/vgpu_unlock_hooks.c 0644 KERNEL_MODULE_SRC INHERIT_PATH_DEPTH:1 MODULE:vgpu'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" vgpu-kvm/.manifest\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'kernel/nvidia/kern.ld 0644 KERNEL_MODULE_SRC INHERIT_PATH_DEPTH:1 MODULE:resman'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" vgpu-kvm/.manifest\n")])])]),t("h3",{attrs:{id:"install"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[e._v("#")]),e._v(" Install")]),e._v(" "),t("p",[e._v("You can either install the driver directly ...")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("vgpu-kvm/nvidia-installer --dkms\n")])])]),t("p",[e._v("... or you can re-pack it for ease of safe-keeping (and/or use with applications such as "),t("a",{attrs:{href:"https://libvf.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("libvf.io"),t("OutboundLink")],1),e._v("):")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("vgpu-kvm/makeself.sh --target-os "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("uname")]),e._v(" -s"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" --target-arch "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("uname")]),e._v(" -m"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'vgpu-kvm'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./NVIDIA-Linux-x86_64-510.47.03-vgpu-kvm-patched.run'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'NVIDIA Accelerated Graphics Driver for Linux-x86_64 510.47.03 w/ Unlock Hooks'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    ./nvidia-installer\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'s/targetdir=.*/targetdir=NVIDIA-Linux-x86_64-510.47.03-vgpu-kvm-patched/'")]),e._v(" NVIDIA-Linux-x86_64-510.47.03-vgpu-kvm-patched.run\n")])])]),t("h2",{attrs:{id:"merged-driver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merged-driver"}},[e._v("#")]),e._v(" Merged Driver")]),e._v(" "),t("p",[e._v("The more complex of the two approaches, building the merged driver will require more work and possibly some judgement/trial-and-error if not working with the exact release the instructions are written against.")]),e._v(" "),t("p",[e._v("You will, in addition to the previous set of prerequisites, need to install Meld to proceed.")]),e._v(" "),t("h3",{attrs:{id:"unpack-files-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unpack-files-2"}},[e._v("#")]),e._v(" Unpack files")]),e._v(" "),t("p",[e._v("This expands the Grid and vGPU-KVM driver packages, fixes permissions and creates an intitial copy of the Grid driver to use as a base for the merged driver.")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'NVIDIA-Linux-x86_64-510.47.03-grid.run'")]),e._v(" -x --target grid\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'NVIDIA-Linux-x86_64-510.47.03-vgpu-kvm.run'")]),e._v(" -x --target vgpu-kvm\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" -R u+w "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" -lR grid merged\n")])])]),t("h3",{attrs:{id:"resolve-differences-in-meld"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resolve-differences-in-meld"}},[e._v("#")]),e._v(" Resolve differences in Meld")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Open Meld and start a new 3-way directory comparison.")]),e._v(" "),t("p",[t("img",{attrs:{src:a(386),alt:"Start a new comparison"}})])]),e._v(" "),t("li",[t("p",[e._v("Ensure you have no filters applied and change the view option to show file status: new")]),e._v(" "),t("p",[t("img",{attrs:{src:a(387),alt:"Select view options"}})])]),e._v(" "),t("li",[t("p",[e._v("Under "),t("code",[e._v("vgpu-kvm")]),e._v(', ctrl + click to select all the items listed in green. These are the files present in the vgpu-kvm driver that need to be copied into the merged driver. Then, right click and select "Copy to Right".')]),e._v(" "),t("p",[t("img",{attrs:{src:a(388),alt:"Copy new files"}})])]),e._v(" "),t("li",[t("p",[e._v("Update your view options to show file status: modified")])]),e._v(" "),t("li",[t("p",[e._v("Take the "),t("code",[e._v("post-install")]),e._v(", "),t("code",[e._v("pre-uninstall")]),e._v(", "),t("code",[e._v("nvidia-sources.Kbuild")]),e._v(" and "),t("code",[e._v("nvidia-bug-report.sh")]),e._v(" from "),t("code",[e._v("vgpu-kvm")]),e._v(" and copy them to "),t("code",[e._v("merged")]),e._v(" (as was done in step 5).")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("This does leave out the code which installs "),t("code",[e._v("nvidia-gridd")]),e._v(" and "),t("code",[e._v("nvidia-topologyd")]),e._v(", but those appear to be irrelevant on the host.")]),e._v(" "),t("p",[e._v("If that is a concern, you should manually resolve the differences within "),t("code",[e._v("post-install")]),e._v(" and "),t("code",[e._v("pre-uninstall")]),e._v(".")])])]),e._v(" "),t("li",[t("p",[e._v("Manually edit "),t("code",[e._v("merged/conftest.sh")]),e._v(" to add the line "),t("code",[e._v("VGX_KVM_BUILD=1")]),e._v(" just above where the "),t("code",[e._v("GRID_BUILD")]),e._v(" variable is assigned.")]),e._v(" "),t("p",[t("img",{attrs:{src:a(389),alt:"Edit conftest.sh"}})])]),e._v(" "),t("li",[t("p",[e._v("Add the lines from "),t("code",[e._v("vgpu-kvm")]),e._v(" into "),t("code",[e._v("merged/.manifest")])]),e._v(" "),t("ul",[t("li",[e._v("append "),t("code",[e._v("nvidia-vgpu-vfio")]),e._v(" to line 4 (the list of modules to build)")]),e._v(" "),t("li",[e._v("take any lines that appear in under "),t("code",[e._v("vgpu-kvm/.manifest")]),e._v(" as blue or green and copy them to "),t("code",[e._v("merged/.manifest")]),e._v(" (for blue sections, you can hold ctrl and click the right arrow to get a copy menu)")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(390),alt:"Edit manifest"}})])]),e._v(" "),t("li",[t("p",[e._v("Close Meld, making sure to save changes to the files which were manually edited.")])])]),e._v(" "),t("h3",{attrs:{id:"apply-support-patches"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apply-support-patches"}},[e._v("#")]),e._v(" Apply support patches")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("patch merged/kernel/nvidia-vgpu-vfio/nvidia-vgpu-vfio.c nvidia-vgpu-vfio.patch\npatch merged/kernel/nvidia/nv-kernel.o_binary nv-kernel.patch\n")])])]),t("h3",{attrs:{id:"add-unlock-hooks-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-unlock-hooks-2"}},[e._v("#")]),e._v(" Add unlock hooks")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'https://github.com/DualCoder/vgpu_unlock.git'")]),e._v(" vgpu_unlock\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" -l vgpu_unlock/kern.ld merged/kernel/nvidia/kern.ld\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" -l vgpu_unlock/vgpu_unlock_hooks.c merged/kernel/nvidia/vgpu_unlock_hooks.c\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'$ a ldflags-y += -T $(src)/nvidia/kern.ld'")]),e._v(" merged/kernel/nvidia/nvidia.Kbuild\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'32 a #include \"vgpu_unlock_hooks.c\"'")]),e._v(" merged/kernel/nvidia/os-interface.c\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'kernel/common/inc/vgpu_unlock_hooks.c 0644 KERNEL_MODULE_SRC INHERIT_PATH_DEPTH:1 MODULE:vgpu'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" merged/.manifest\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'kernel/nvidia/kern.ld 0644 KERNEL_MODULE_SRC INHERIT_PATH_DEPTH:1 MODULE:resman'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" merged/.manifest\n")])])]),t("h3",{attrs:{id:"install-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-2"}},[e._v("#")]),e._v(" Install")]),e._v(" "),t("p",[e._v("As with the vGPU-KVM driver, you can either install directly (as root) or build a resultant "),t("code",[e._v(".run")]),e._v(" package.")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("merged/nvidia-installer --dkms\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("merged/makeself.sh --target-os "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("uname")]),e._v(" -s"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" --target-arch "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("uname")]),e._v(" -m"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'merged'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./NVIDIA-Linux-x86_64-510.47.03-grid-vgpu-kvm.run'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'NVIDIA Accelerated Graphics Driver for Linux-x86_64 510.47.03 (Merged) w/ Unlock Hooks'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    ./nvidia-installer\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'s/targetdir=.*/targetdir=NVIDIA-Linux-x86_64-510.47.03-grid-vgpu-kvm/'")]),e._v(" NVIDIA-Linux-x86_64-510.47.03-grid-vgpu-kvm.run\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);