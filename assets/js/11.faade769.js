(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{401:function(s,t,a){"use strict";a.r(t);var e=a(54),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[s._v("#")]),s._v(" "+s._s(s.$frontmatter.title))]),s._v(" "),a("p",[s._v("Exact instructions for setting up a Linux based system for vGPU vary from distribution to distribution. NVIDIA certifies Red Hat Enterprise Linux KVM for use with their vGPU technology, but they also provide a generic installer package, which is what we will be covering here.")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),a("p",[s._v("Following the directions below will not allow your host to use the graphics card for display output. See "),a("RouterLink",{attrs:{to:"/tools/merged-driver.html"}},[s._v("Merged Driver")]),s._v(" for how to make that work.")],1)]),s._v(" "),a("h2",{attrs:{id:"install-unlock-libraries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-unlock-libraries"}},[s._v("#")]),s._v(" Install Unlock Libraries")]),s._v(" "),a("p",[s._v("You will need to download both "),a("a",{attrs:{href:"../tools/vgpu_unlock"}},[s._v("vgpu_unlock")]),s._v(" and "),a("a",{attrs:{href:"../tools/vgpu_unlock-rs"}},[s._v("vgpu_unlock-rs")]),s._v(", both of which are available from GitHub:")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/DualCoder/vgpu_unlock",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/DualCoder/vgpu_unlock"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/mbilker/vgpu_unlock-rs",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/mbilker/vgpu_unlock-rs"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("You can download the source archives and copy them over manually or you can, as we will do below, install and use the Git CLI to download them directly on the host.")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("All commands for the rest of this page need to be executed as root.")])]),s._v(" "),a("h3",{attrs:{id:"install-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-dependencies"}},[s._v("#")]),s._v(" Install dependencies")]),s._v(" "),a("p",[s._v("You will need the following packages installed:")]),s._v(" "),a("ul",[a("li",[s._v("Git")]),s._v(" "),a("li",[s._v("DKMS")]),s._v(" "),a("li",[s._v("Kernel Headers")]),s._v(" "),a("li",[s._v("Rust")]),s._v(" "),a("li",[s._v("mdevctl")])]),s._v(" "),a("p",[s._v("The installation commands vary depending on your choice of distribution.")]),s._v(" "),a("ul",[a("li",[s._v("RHEL:")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("dnf "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm"')]),s._v("\ndnf update\ndnf --enablerepo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"epel"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" dkms kernel-devel mdevctl rust rust-cargo "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v("\n")])])]),a("ul",[a("li",[s._v("Debian/Ubuntu:")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" upgrade\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" dkms linux-headers mdevctl rustc cargo "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v("\n")])])]),a("ul",[a("li",[s._v("Arch")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("pacman -Su dkms linux-headers mdevctl rust "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v("\n")])])]),a("h3",{attrs:{id:"download-and-build-libraries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#download-and-build-libraries"}},[s._v("#")]),s._v(" Download and build libraries")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /usr/local/src\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /usr/local/src\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://github.com/DualCoder/vgpu_unlock"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://github.com/mbilker/vgpu_unlock-rs"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vgpu_unlock-rs"')]),s._v("\n\ncargo build --release\n")])])]),a("h2",{attrs:{id:"patch-and-install-nvidia-driver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#patch-and-install-nvidia-driver"}},[s._v("#")]),s._v(" Patch and Install NVIDIA Driver")]),s._v(" "),a("p",[s._v("For the purposes of this section, it is assumed that you will be installing version 460.73.01 of the NVIDIA vGPU driver package. If you are using a different version, know that you will need to specify the correct version in filenames and other commands below.")]),s._v(" "),a("p",[s._v('Begin by copying the vGPU driver ".run" file to '),a("code",[s._v("/tmp")]),s._v(" on your host computer. From there, extract the package so the source files can be modified:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /tmp\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./NVIDIA-Linux-x86_64-460.73.01-vgpu-kvm.run"')]),s._v(" -x\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./NVIDIA-Linux-x86_64-460.73.01-vgpu-kvm"')]),s._v("\n")])])]),a("p",[s._v("Modify the file "),a("code",[s._v("./kernel/nvidia/os-interface.c")]),s._v(" and add the following line after the other lines which begin with "),a("code",[s._v("#include")]),s._v(", near the beginning of the file:")]),s._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/src/vgpu_unlock/vgpu_unlock_hooks.c"')])]),s._v("\n")])])]),a("p",[s._v("Append the following line to "),a("code",[s._v("./kernel/nvidia/nvidia.Kbuild")]),s._v(":")]),s._v(" "),a("div",{staticClass:"language-makefile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[s._v("ldflags-y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" -T /usr/local/src/vgpu_unlock/kern.ld\n")])])]),a("p",[s._v("Install the driver and register with DKMS:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("./nvidia-installer --dkms\n")])])]),a("p",[s._v("Clean up the installation files:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./NVIDIA-Linux-x86_64-460.73.01-vgpu-kvm"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./NVIDIA-Linux-x86_64-460.73.01-vgpu-kvm.run"')]),s._v("\n")])])]),a("h2",{attrs:{id:"optional-install-a-wrapper-for-nvidia-smi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optional-install-a-wrapper-for-nvidia-smi"}},[s._v("#")]),s._v(" (OPTIONAL) Install a Wrapper for "),a("code",[s._v("nvidia-smi")])]),s._v(" "),a("p",[s._v("Doing this will allow the "),a("code",[s._v("nvidia-smi")]),s._v(" utility to recognize supported consumer GPUs as supported for running vGPUs. This is necessary to receive valid output from "),a("code",[s._v("nvidia-smi vgpu")]),s._v(" and its related sub-commands.")]),s._v(" "),a("p",[s._v("Ensure "),a("code",[s._v("/usr/local/bin")]),s._v(" is in your PATH environment variable earlier than "),a("code",[s._v("/usr/bin")]),s._v(" and create a file "),a("code",[s._v("/usr/local/bin/nvidia-smi")]),s._v(" with the following contents:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/bash")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n    vgpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LD_PRELOAD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/src/vgpu_unlock-rs/target/release/libvgpu_unlock_rs.so"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" /usr/lib/nvidia/nvidia-smi.orig "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v("\n")])])]),a("p",[s._v("Make that script executable:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/bin/nvidia-smi"')]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);